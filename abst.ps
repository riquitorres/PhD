%!PS-Adobe-2.0
%%Creator: dvips(k) 5.86 Copyright 1999 Radical Eye Software
%%Title: D:\PhD\final\thesis.dvi
%%CreationDate: Sun Jul 27 10:40:35 2003
%%Pages: 2
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: d:\programs\MiKTeX\miktex\bin\dvips.exe -p2 -l4
%+ -oabstract.ps D:\PhD\final\thesis.dvi
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2003.07.27:1036
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro
%!
% PostScript prologue for pstricks.tex.
% Created 1994/6/23. Source file was pstricks.doc
% Version 0.93a-97 patch 1, 97/11/07
% For use with Rokicki's dvips.
/tx@Dict 200 dict def tx@Dict begin
/ADict 25 dict def
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Atan { /atan load stopped { pop pop 0 } if } def
/Div { dup 0 eq { pop } { div } ifelse } def
/NET { neg exch neg exch T } def
/Pyth { dup mul exch dup mul add sqrt } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def }
def
/PathLength { flattenpath /z 0 def { /y1 ED /x1 ED /y2 y1 def /x2 x1 def
} { /y ED /x ED PathLength@ } {} { /y y2 def /x x2 def PathLength@ }
/pathforall load stopped { pop pop pop pop } if z } def
/STP { .996264 dup scale } def
/STV { SDict begin normalscale end STP  } def
/DashLine { dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def
PathLength } ifelse /b ED /x ED /y ED /z y x add def b a .5 sub 2 mul y
mul sub z Div round z mul a .5 sub 2 mul y mul add b exch Div dup y mul
/y ED x mul /x ED x 0 gt y 0 gt and { [ y x ] 1 a sub y mul } { [ 1 0 ]
0 } ifelse setdash stroke } def
/DotLine { /b PathLength def /a ED /z ED /y CLW def /z y z add def a 0 gt
{ /b b a div def } { a 0 eq { /b b y sub def } { a -3 eq { /b b y add
def } if } ifelse } ifelse [ 0 b b z Div round Div dup 0 le { pop 1 } if
] a 0 gt { 0 } { y 2 div a -2 gt { neg } if } ifelse setdash 1
setlinecap stroke } def
/LineFill { gsave abs CLW add /a ED a 0 dtransform round exch round exch
2 copy idtransform exch Atan rotate idtransform pop /a ED .25 .25
itransform translate pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
Div cvi /x1 ED /y2 y2 y1 sub def clip newpath 2 setlinecap systemdict
/setstrokeadjust known { true setstrokeadjust } if x2 x1 sub 1 add { x1
a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore }
def
/BeginArrow { ADict begin /@mtrx CM def gsave 2 copy T 2 index sub neg
exch 3 index sub exch Atan rotate newpath } def
/EndArrow { @mtrx setmatrix CP grestore end } def
/Arrow { CLW mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1
scale } if w neg h moveto 0 0 L w h L w neg a neg rlineto gsave fill
grestore } def
/Tbar { CLW mul add /z ED z -2 div CLW 2 div moveto z 0 rlineto stroke 0
CLW moveto } def
/Bracket { CLW mul add dup CLW sub 2 div /x ED mul CLW add /y ED /z CLW 2
div def x neg y moveto x neg CLW 2 div L x CLW 2 div L x y L stroke 0
CLW moveto } def
/RoundBracket { CLW mul add dup 2 div /x ED mul /y ED /mtrx CM def 0 CLW
2 div T x y mul 0 ne { x y scale } if 1 1 moveto .85 .5 .35 0 0 0
curveto -.35 0 -.85 .5 -1 1 curveto mtrx setmatrix stroke 0 CLW moveto }
def
/SD { 0 360 arc fill } def
/EndDot { { /z DS def } { /z 0 def } ifelse /b ED 0 z DS SD b { 0 z DS
CLW sub SD } if 0 DS z add CLW 4 div sub moveto } def
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
/closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
load } if ] cvx newpath 3 1 roll T exec } def
/NArray { aload length 2 div dup dup cvi eq not { exch pop } if /n exch
cvi def } def
/NArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop } if
f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/Line { NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub
def n { Lineto } repeat CP 4 2 roll ArrowB L pop pop } if } def
/Arcto { /a [ 6 -2 roll ] cvx def a r /arcto load stopped { 5 } { 4 }
ifelse { pop } repeat a } def
/CheckClosed { dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
and { pop pop /n n 1 sub def } if } def
/Polygon { NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop }
repeat } { n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1
ED /x1 ED x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1
moveto /n n 2 sub def n { Lineto } repeat x1 y1 x0 y0 6 4 roll Lineto
Lineto pop pop closepath } ifelse } def
/Diamond { /mtrx CM def T rotate /h ED /w ED dup 0 eq { pop } { CLW mul
neg /d ED /a w h Atan def /h d a sin Div h add def /w d a cos Div w add
def } ifelse mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2
div /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
setmatrix } def
%  Modification Denis GIROU (CNRS/IDRIS - France) <Denis.Girou@idris.fr> - 15 Jan. 1997
% /Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup 0 eq {
% pop } { CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
% div dup cos exch sin Div mul sub def } ifelse mark 0 d w neg d 0 h w d 0
% d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
% setmatrix } def
/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup
CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
div dup cos exch sin Div mul sub def mark 0 d w neg d 0 h w d 0
d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
setmatrix } def
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CC { /l0 l1 def /x1 x dx sub def /y1 y dy sub def /dx0 dx1 def /dy0 dy1
def CCA /dx dx0 l1 c exp mul dx1 l0 c exp mul add def /dy dy0 l1 c exp
mul dy1 l0 c exp mul add def /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos
abs b exp a mul dx dy Pyth Div 2 div def /x2 x l0 dx mul m mul sub def
/y2 y l0 dy mul m mul sub def /dx l1 dx mul m mul neg def /dy l1 dy mul
m mul neg def } def
/IC { /c c 1 add def c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if }
ifelse /a a 2 mul 3 div 45 cos b exp div def CCA /dx 0 def /dy 0 def }
def
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
/OpenCurve { NArray n 3 lt { n { pop pop } repeat } { BOC /n n 3 sub def
n { NC } repeat EOC } ifelse } def
/AltCurve { { false NArray n 2 mul 2 roll [ n 2 mul 3 sub 1 roll ] aload
/Points ED n 2 mul -2 roll } { false NArray } ifelse n 4 lt { n { pop
pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse } def
/ClosedCurve { NArray n 3 lt { n { pop pop } repeat } { n 3 gt {
CheckClosed } if 6 copy n 2 mul 6 add 6 roll IC CC x y moveto n { NC }
repeat closepath pop pop } ifelse } def
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore }
def
/FontDot { DS 2 mul dup matrix scale matrix concatmatrix exch matrix
rotate matrix concatmatrix exch findfont exch makefont setfont } def
/Rect { x1 y1 y2 add 2 div moveto x1 y2 lineto x2 y2 lineto x2 y1 lineto
x1 y1 lineto closepath } def
/OvalFrame { x1 x2 eq y1 y2 eq or { pop pop x1 y1 moveto x2 y2 L } { y1
y2 sub abs x1 x2 sub abs 2 copy gt { exch pop } { pop } ifelse 2 div
exch { dup 3 1 roll mul exch } if 2 copy lt { pop } { exch pop } ifelse
/b ED x1 y1 y2 add 2 div moveto x1 y2 x2 y2 b arcto x2 y2 x2 y1 b arcto
x2 y1 x1 y1 b arcto x1 y1 x1 y2 b arcto 16 { pop } repeat closepath }
ifelse } def
/Frame { CLW mul /a ED 3 -1 roll 2 copy gt { exch } if a sub /y2 ED a add
/y1 ED 2 copy gt { exch } if a sub /x2 ED a add /x1 ED 1 index 0 eq {
pop pop Rect } { OvalFrame } ifelse } def
/BezierNArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop
} if n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat f { ]
aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/OpenBezier { BezierNArray n 1 eq { pop pop } { ArrowA n 4 sub 3 idiv { 6
2 roll 4 2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB curveto }
ifelse } def
/ClosedBezier { BezierNArray n 1 eq { pop pop } { moveto n 1 sub 3 idiv {
6 2 roll 4 2 roll curveto } repeat closepath } ifelse } def
/BezierShowPoints { gsave Points aload length 2 div cvi /n ED moveto n 1
sub { lineto } repeat CLW 2 div SLW [ 4 4 ] 0 setdash stroke grestore }
def
/Parab { /y0 exch def /x0 exch def /y1 exch def /x1 exch def /dx x0 x1
sub 3 div def /dy y0 y1 sub 3 div def x0 dx sub y0 dy add x1 y1 ArrowA
x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB curveto /Points [ x1 y1 x0
y0 x0 2 mul x1 sub y1 ] def } def
/Grid { newpath /a 4 string def /b ED /c ED /n ED cvi dup 1 lt { pop 1 }
if /s ED s div dup 0 eq { pop 1 } if /dy ED s div dup 0 eq { pop 1 } if
/dx ED dy div round dy mul /y0 ED dx div round dx mul /x0 ED dy div
round cvi /y2 ED dx div round cvi /x2 ED dy div round cvi /y1 ED dx div
round cvi /x1 ED /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def /w x2 x1 sub
0 gt { 1 } { -1 } ifelse def b 0 gt { /z1 b 4 div CLW 2 div add def
/Helvetica findfont b scalefont setfont /b b .95 mul CLW 2 div add def }
if systemdict /setstrokeadjust known { true setstrokeadjust /t { } def }
{ /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
exch itransform } bind def } ifelse gsave n 0 gt { 1 setlinecap [ 0 dy n
div ] dy n div 2 div setdash } { 2 setlinecap } ifelse /i x1 def /f y1
dy mul n 0 gt { dy n div 2 div h mul sub } if def /g y2 dy mul n 0 gt {
dy n div 2 div h mul add } if def x2 x1 sub w mul 1 add dup 1000 gt {
pop 1000 } if { i dx mul dup y0 moveto b 0 gt { gsave c i a cvs dup
stringwidth pop /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse h 0 gt {b neg}
{z1} ifelse rmoveto show grestore } if dup t f moveto g t L stroke /i i
w add def } repeat grestore gsave n 0 gt
% DG/SR modification begin - Nov. 7, 1997
%    { 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
% DG/SR modification end
{ 2 setlinecap } ifelse /i y1 def /f x1 dx mul
n 0 gt { dx n div 2 div w mul sub } if def /g x2 dx mul n 0 gt { dx n
div 2 div w mul add } if def y2 y1 sub h mul 1 add dup 1000 gt { pop
1000 } if { newpath i dy mul dup x0 exch moveto b 0 gt { gsave c i a cvs
dup stringwidth pop /z2 ED w 0 gt {z1 z2 add neg} {z1} ifelse h 0 gt
{z1} {b neg} ifelse rmoveto show grestore } if dup f exch t moveto g
exch t L stroke /i i h add def } repeat grestore } def
/ArcArrow { /d ED /b ED /a ED gsave newpath 0 -1000 moveto clip newpath 0
1 0 0 b grestore c mul /e ED pop pop pop r a e d PtoC y add exch x add
exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
mul neg d } def
/Ellipse { /mtrx CM def T scale 0 0 1 5 3 roll arc mtrx setmatrix } def
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
/RotBegin { tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 }
def } if /TMatrix [ TMatrix CM ] cvx def /a ED a Rot /RAngle [ RAngle
dup a add ] cvx def } def
/RotEnd { /TMatrix [ TMatrix setmatrix ] cvx def /RAngle [ RAngle pop ]
cvx def } def
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
/Uput { /a ED add 2 div /h ED 2 div /w ED /s a sin def /c a cos def /b s
abs c abs 2 copy gt dup /q ED { pop } { exch pop } ifelse def /w1 c b
div w mul def /h1 s b div h mul def q { w1 abs w sub dup c mul abs } {
h1 abs h sub dup s mul abs } ifelse } def
/UUput { /z ED abs /y ED /x ED q { x s div c mul abs y gt } { x c div s
mul abs y gt } ifelse { x x mul y y mul sub z z mul add sqrt z add } { q
{ x s div } { x c div } ifelse abs } ifelse a PtoC h1 add exch w1 add
exch } def
/BeginOL { dup (all) eq exch TheOL eq or { IfVisible not { Visible
/IfVisible true def } if } { IfVisible { Invisible /IfVisible false def
} if } ifelse } def
/InitOL { /OLUnit [ 3000 3000 matrix defaultmatrix dtransform ] cvx def
/Visible { CP OLUnit idtransform T moveto } def /Invisible { CP OLUnit
neg exch neg exch idtransform T moveto } def /BOL { BeginOL } def
/IfVisible true def } def
end

%%EndProcSet
%%BeginProcSet: pst-dots.pro
%!PS-Adobe-2.0
%%Title: Dot Font for PSTricks
%%Creator: Timothy Van Zandt <tvz@Princeton.EDU>
%%Creation Date: May 7, 1993
10 dict dup begin
  /FontType 3 def
  /FontMatrix [ .001 0 0 .001 0 0 ] def
  /FontBBox [ 0 0 0 0 ] def
  /Encoding 256 array def
  0 1 255 { Encoding exch /.notdef put } for
  Encoding
    dup (b) 0 get /Bullet put
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    (P) 0 get /BoldPentagon put
  /Metrics 13 dict def
  Metrics begin
    /Bullet 1000 def
    /Circle 1000 def
    /BoldCircle 1000 def
    /SolidTriangle 1344 def
    /Triangle 1344 def
    /BoldTriangle 1344 def
    /SolidSquare 886 def
    /Square 886 def
    /BoldSquare 886 def
    /SolidPentagon 1093.2 def
    /Pentagon 1093.2 def
    /BoldPentagon 1093.2 def
    /.notdef 0 def
  end
  /BBoxes 13 dict def
  BBoxes begin
    /Circle { -550 -550 550 550 } def
    /BoldCircle /Circle load def
    /Bullet /Circle load def
    /Triangle { -571.5 -330 571.5 660 } def
    /BoldTriangle /Triangle load def
    /SolidTriangle /Triangle load def
    /Square { -450 -450 450 450 } def
    /BoldSquare /Square load def
    /SolidSquare /Square load def
    /Pentagon { -546.6 -465 546.6 574.7 } def
    /BoldPentagon /Pentagon load def
    /SolidPentagon /Pentagon load def
    /.notdef { 0 0 0 0 } def
  end
  /CharProcs 20 dict def
  CharProcs begin
    /Adjust {
      2 copy dtransform floor .5 add exch floor .5 add exch idtransform
      3 -1 roll div 3 1 roll exch div exch scale
    } def
    /CirclePath { 0 0 500 0 360 arc closepath } def
    /Bullet { 500 500 Adjust CirclePath fill } def
    /Circle { 500 500 Adjust CirclePath .9 .9 scale CirclePath eofill } def
    /BoldCircle { 500 500 Adjust CirclePath .8 .8 scale CirclePath eofill } def
    /BoldCircle { CirclePath .8 .8 scale CirclePath eofill } def
    /TrianglePath {
      0  660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath
    } def
    /SolidTriangle { TrianglePath fill } def
    /Triangle { TrianglePath .85 .85 scale TrianglePath eofill } def
    /BoldTriangle { TrianglePath .7 .7 scale TrianglePath eofill } def
    /SquarePath {
      -450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto
      closepath
    } def
    /SolidSquare { SquarePath fill } def
    /Square { SquarePath .89 .89 scale SquarePath eofill } def
    /BoldSquare { SquarePath .78 .78 scale SquarePath eofill } def
    /PentagonPath {
      -337.8 -465   moveto
       337.8 -465   lineto
       546.6  177.6 lineto
         0    574.7 lineto
      -546.6  177.6 lineto
      closepath
    } def
    /SolidPentagon { PentagonPath fill } def
    /Pentagon { PentagonPath .89 .89 scale PentagonPath eofill } def
    /BoldPentagon { PentagonPath .78 .78 scale PentagonPath eofill } def
    /.notdef { } def
  end
  /BuildGlyph {
    exch
    begin
      Metrics 1 index get exec 0
      BBoxes 3 index get exec
      setcachedevice
      CharProcs begin load exec end
    end
  } def
  /BuildChar {
    1 index /Encoding get exch get
    1 index /BuildGlyph get exec
  } bind def
end
/PSTricksDotFont exch definefont pop

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/copypage{}N/p 3 def @MacSetUp}N/doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N/endTexFig{end psf$SavedState restore}N/@beginspecial{SDict
begin/SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count/ocount X/dcount countdictstack N}N/@setspecial{
CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if/showpage{}N/erasepage{}N/copypage{}N newpath}N
/@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{end}
repeat grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 TeXDict begin /box{newpath 2 copy moveto 3 copy pop exch lineto 4
copy pop pop lineto 4 copy exch pop exch pop lineto closepath } bind
def /min{ 2 copy gt { exch } if pop } bind def/max{ 2 copy lt { exch
} if pop } bind def/roundedbox{/radius exch store 3 2 roll 2 copy min
radius sub /miny exch store max radius add /maxy exch store 2 copy
min radius sub /minx exch store max radius add /maxx exch store newpath
minx radius add miny moveto maxx miny maxx maxy radius arcto maxx maxy
minx maxy radius arcto minx maxy minx miny radius arcto minx miny maxx
miny radius arcto 16 {pop} repeat closepath }bind def /rectcartouche{box
gsave .95 setgray fill grestore 1 setlinewidth stroke }bind def /cartouche{roundedbox
gsave .95 setgray fill grestore 1 setlinewidth stroke }bind def end
 
@fedspecial end TeXDict begin
39158280 55380996 1000 600 600 (D:\PhD\final\thesis.dvi)
@start
%DVIPSBitmapFont: Fa cmsy8 8 1
/Fa 1 15 df<EB7F803801FFE0000713F8380FC0FC381F003E003C130F00387F00781480
0070130300F014C0481301A66C1303007014800078130700381400003C5B001F133E380F
C0FC6CB45A000113E038007F801A1A7C9D23>14 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fb cmbx12 24.88 15
/Fb 15 88 df[<F31FF0517E517EA2517EA3507FA25080A25080A35080A25080A35080A2
5080A397B67EA24F81A34F82A24F82A34F82A24F821AFD1AF9DF3FF881A24F4881871AE0
07FF6D80A24E01C081871A804E6E81A24E0100828761060F6E81A24E48838761063F6E81
A24E4883886106FF6F80A24D498388614D7081A24D90C8828860050F7081A24D48858860
053F7081A24D4885896005FF7180A24C498589604C7281A24C90CA82895F040F728194BD
FC4C88A34C88A24C88A3DCFFE0CB003F80A24B49878A5F4B7481A24B90CC828A5E030F74
81A24B48898A5E033F7481A24B48898B5E03FF7580A24A497480A25E4A7681A24A90CE6C
81A25D91261FFF8074810103B512FEB900C0041FBA12FEA9>159
145 120 272 176 65 D[<BFFC1EFEF6FFE01FFCF7FF8020F020FC20FF8DC7000392CA00
1F15E00B0181776C800C1F807814FF0C03818A78818E79808B8E8B8E8B8EA27980A47915
80AB551500A4555CA26A676A676A555C9CB65AA2545D5492C7FC545C5414F80C3F5C545C
53B612800B0F4AC8FC0B7F14F80A1FB612E095BBC9FC1FF81F801FF8F7FF8020F820FE95
CBECFFC00C1F14F00C07807814FE0C006E7E7980798079807980798079808E79158023C0
8B23E08C23F0A223F88CA223FCA38C23FEAB5614FCA55614F8A39DB612F0A25515E06723
C055158067551500555C555C9CB6FC545D0C075D0C1F15C09BB75A0B0F93C7FCC212FC69
21E021800EFCC8FC20F020800DF0C9FC0CFCCAFC>143 142 120
269 165 I[<0803B500C0EE01F00703B600FEEE03F8077FDBFFE015070607B800FC150F
063F05FF151F4DBA00E0143F050F07F8147F053F07FE14FF94BC5B04039326F8000FECC0
03040F4BC86CEBF007043F03C0030F6D5A93B648C900036D5A4B03F09339007FFF3F0307
03C0051F90B5FC4B92CB7E033F02FC18034B02F08492B648844A0380193F4A92CD7E4A4A
864A4A864A02F0864A4A864A8991B65A494B874992CF7E4C885B494A885E498B494A88A2
495C8D90B65A8D5A5E48217FA24892D1FC223FA25A5DA248211FA3485CFA0FF09FC7FCA2
5AA45DA3B6FCB27EA381A47EA46C80FA07F0FA0FF87EA2817EA36C6F1D1F23F07E827E22
3F6D6E1EE0A26D6E1D7F23C06D6E1DFF7F705213806D806D55130070646D6F646D6F515A
6E6E1B1F6E6E515A6E6E515A6E6E1BFF6E6E505B6E6E505B6E6F4F5B6E03E04F90C7FC6F
6EF13FFE6F02FC4F5A030F02FF4E485A6F03C005075B030103F0051F5B6F03FE057F1380
043FDAFFE00303B5C8FC040F03FE033F13FC0403DBFFF80107B55A040093B812E0053F1A
80050F4FC9FC050119F8DD003F18C0060795CAFCDE007F16F0070393CBFCDF000314C0>
141 146 115 271 168 I[<BE12FEF5FFFCF6FFC01FFCF7FF8020E020FC20FF21C0C700
030380C8000116F0E2000F810B0015FE0C1F800C0315C00C00810D3F8079800D0714FE79
807981796C808C7A807A808F7A807A808C8F7A818DA17E8DA17E8DA17EA27B80A2A17E8D
A17EA28DA17EA3A113808DA3A113C0A57B15E0A6A113F0B3A2A113E0A569A113C0A5A113
80A269A2A11300A3575CA2A15AA269A15A69A15AA2575CA15A69A15A9EB6FC5692C7FC6B
565C68565C565C565C565C9DB65A5592C8FC0D075C555C0D3F5C9CB65A0C0315C00C0F5D
0C7F92C9FC0B07B612FC52B712F0C212C09ECAFC20FC20F020800DFCCBFC1FE00CFCCCFC
53CDFC>156 142 120 269 178 I[<C212F8A48DA5C7000303C0C9123FF5007F1E0F0C01
80787E1F1F8B8B1F018BA27A7E8C8CA28CA28CA28C8EA28CA38CA38EA2E21FF0157FA67B
7EA40A3F93C8FCA41C7FA21CFFA26363631B1F1B7F0807B5FC95B8FCA99538C00007F200
7F1B1F1B07878787A21C7FA21C3FA3FA7FC01C1FA2FAFF80A6571300A299CAFCA369A26A
A22107A3210F6AA2211FA2213FA2575AA221FFA26868565BA26868207F9DB5FC555C1F07
1F1F1F7F0C03B6FC1E3F0B1FB7FCC35AA66AA3>138 141 120 268
153 I[<0803B500C0EE01F00703B600FE4C7E077FDBFFE015070607B800FC150F063F05
FF151F4DBA00E0143F050F07F8147F053F07FE14FF94BC5B04039326F8000FECC003040F
4BC86CEBF007043F03C0030F6D5A93B648C900036D5A4B03F09339007FFF3F030703C005
1F90B5FC4B92CB7E033F02FC18034B02F08492B648844A0380193F4A92CD7E4A4A864A4A
864A02F0864A4A864A8991B65A494B874992CF7E4C885B494A885E498B494A88A2495C8D
90B65A8D5A5E48217FA24892D1FC223FA25A5DA248211FA3485C7C5A9FC9FCA25AA45DA3
B6FCB27EA381A20A0FBB12F8A27EA46C80A36C98C96C02F8C7FCA2817EA36C81A27E827E
827FA26D80A26D806D80A26D806D80A26D816D816E806E806E806E6E97B6FC6E806E806E
03C0606E816F02F8606F02FE60030F6E606F03E0173F030103F85F6F03FF933801FFFC04
3F03E00307497E040F03FF033F497E040304FC0107B5EAE00F040093B8487E053FF20001
050F07FCEB007F050107F0141FDD003F06C01407060795C81201DE007F04F8ED00700703
048093C8FCDF000302E0CDFC>157 146 115 271 183 71 D[<BC0403B9FCA9C7000303
C0CC000103E0C7FCE6000F01F8C8FC7B13E05713805790C9FC575A575A56485A565B565B
5613805690CAFC565A565A55485A555B5513C0555B5590CBFC555AF7FFFC545B545B5413
C0545B5490CCFC545AF6FFFC535B5313E0535B535B5390CDFCF57FFE535A525B5213E052
5B525B5290CEFCF47FFE525A5113F0515B515B515B093F7F6398B57E5080508062508008
3F80508097B7FC4F824F82614F82073F824F82F1FFF906C101F18106C301E08106C7496C
8006DF138095B5486C8107FC6D814F7F4F834F6D814F6D814F7F96C78206FC6E814E6F80
604E6F814E6F817681A276817681888C76817780A2778177817781A277817781898D7781
7880A2788178817881A2788178818A8E788179808B8F79817981A2798179818B8F79817A
808C5615C00D03B712F0BC033FBA12E0A9>163 142 120 269 182
75 D[<BC12F8A9C7000303C0CEFCB3B3B3B3A5F8FF80A4672100A667A368A21F07A41F0F
A3555AA21F3FA21F7FA21FFFA2666668666666666653B5FC65650B1F5C1D7F0A03B6FC1C
1F0903B7FCC1FCA468A5>121 142 120 269 140 I[<B900C00C7FB812E0729BB9FC7265
7265A37265A27265C70003A101F8C8FC72F51FEFA2706EF43FCFA3706EF47F8FA2706EF4
FF0FA2706EF301FEA3706EF303FCA2706EF307F8A2706EF30FF0A2706EF31FE0A3716EF2
3FC0A2716EF27F80A2716EF2FF00A2716E4F5AA3716E4F5AA2716E4F5AA2716E4F5AA371
6E4F5AA2726E4E5AA2726E4E5AA2726E4EC7FCA3726E4D5AA2726E4D5AA2726E4D5AA272
6E4D5AA3726E4D5AA2736E4C5AA2736E4C5AA3736E4CC8FCA2736E4B5AA2736E4B5AA273
6E4B5AA3736E4B5AA2736E4B5AA2746E4A5AA2746E4A5AA3746E4AC9FCA2746E495AA274
6E495AA3746E495AA2746E495AA2746E495AA2756E485AA3756E485AA2756E48CAFCA275
ECF1FEA275ECFBFCA375ECFFF8A2755DA2755DA3765CA2765CA27691CBFCA2765BA34A6D
715B49B512FEB900FC6F490303BB12E0A2765BA2765BA3775A0B1FC9FC>203
142 120 269 220 I[<B900E04EB912F884848484A2848585C700037094C7000302FCC7
FC73DF000F90C8FC7C5A85858585A2708170817081708186827081708170818783718171
8171817181A2718171817181728188847281728172817281A27281728173817381898573
8173817381898573817481748174818A867481748174818A8675817581758175818B8775
81758175818C887681768176817681A276817681768177158021C0897715E07715F07715
F87715FCA27715FE7715FF7815877815C722E78A7815F77815FF8AA28A8A8B8B8BA28B8B
8B8BA28B8C8C8C8CA28C8C8C8CA28D8D8D8D8DA24A6D8849B500FE88B900FC86227FA222
3F221F220F2207A27C5A>165 142 120 269 182 I[<97B512F0077FECFFE00607B712FE
067FEEFFE00503B912FC051FF0FF80057F19E00403BB12FC040F9226E0007F14FF043F02
FCC7000315C04C02E0DA007F804BB60080031F14F8030702FCC9000314FE4B4A70804B02
E0706C80037F0280051F14E092B6CB6C804A4A72804A4A72804A02F00600804A4A737F4A
4A73804A8B4A4A738091B6CD6C80494A7480A2494A7480494A7480498C4C86498D4C8749
8D494A7580A290B68B4C87488EA24892CF6C80A3488E4B88A2488EA3484A761580A34823
C0A5484A7615E0A7B621F0B36C23E0A26F64A56C23C0A46F646C2380A36C23006F64A26C
6AA270636C6AA26C6A70636C6A70636D69A26D6E98B65AA26D6E505DA26D6E5092C7FC6D
6870626D6E505C6D686D6F4F5C6E6E4F5C6E6E4F5CA26E6E96B65A6E6E4E92C8FC6E6E4E
5C020102FF060F14F86E6F4D5C6F6E4D5C6F02F094B65A030F6E4C92C9FC6F02FE04075C
03016E6C031F14F86F03F092B65A043F02FE020715C0040FDAFFF090B7CAFC040392B812
FC04001AF0051F198005074ECBFCDD007F17E0060F94CCFCDE007F15E0070002F0CDFC>
148 146 115 271 175 I[<BD12FCF4FFFCF5FFE01EFCF6FFC01FF01FFE797E20E0C700
030380C86C15F80A0181E2003F14FF0B07810B0115E0776C8078807880788078808A7881
8E7881A28E8B8EA37980A48EAA6AA3676AA26AA29CB65AA26A545D9FCAFC66545C545C54
5C545C9BB612C0535D0B074ACBFC0B3F5C52B612F00A7F15C095BBCCFC1FF81FC054CDFC
66F6FF801FE00680C7000315F8E1003F14FE0A0F800A0315C07681766C80778077807780
8C7781898D898D898DA38A8DAD8DACA1EB1FC0A1EB3FE08D8AA37880A1137FA114C07881
7818FF7C1580785F786F1500BB00FE6F6F5B796E495A7902FEEB1FFC799139FFC07FF80D
0792B55A0D015F796C5E0E1F5E0E034BC7FCD4001F14F8E7003F13C0>163
144 120 269 173 82 D[<93260FFFF8163E4BB600E0153F031F03FE5D037FDBFFC05C02
03B800F05B020F05FC5B4A05FF5B027FF0C00F91B526FE000FECF01F010302C0D9007F6D
5A4991C800076D5A4901FC030090B6FC4901F0163F4949160F4901808290B5170192CBFC
4849844849181F87484984A2484984874886A248498588A24887A388A2B58680A36E85A2
80A26E8580A2818103F0725A6C6E96C7FC15FE8116E06C15FEEEFFE017FF6C17F0F0FF80
6C18F8F1FFC06C19FCF2FF806C1AE01BF86C1AFE6C747E6D1AE0886D866D866D1AFF6D87
6D87010087806E86020F86020386020086153F030F851501DB001F19801601DC000F18C0
EF007F060717E0F0003F070316F0F1003F1A0F080315F81A00871B1F877514FCA287007F
86486C85A288A388A36D86A31EF87FA37F1EF0A26D626D1CE0A27F6D5013C0A26E1B806E
96B5FC6E1B0002F8606E4E5B6E626E6C5F03E04D5B03F84D5B03FE057F5BDBFFC093B55A
04F803035C496CD9FF80021F91C7FCD9FC1F02FF49B55AD9F80792B75A496C19F049C661
49011F18804901074DC8FC90C817F848031F16C048030003FCC9FC007C04011480>102
146 115 271 129 I[<000FC312F8A6488EA304C0C7001F4AC7120103F8C8F0000F03C0
1C0192C9737E02FC1E1F4A1E0702E08A4A8A4A8A4890CA757EA249203F49201FA349200F
A2492007A4492003007F8EA4498CA848487A1380A6CC99C7FCB3B3B3B3AA030FBD12FCA9
>145 140 120 267 162 I[<BB6C010FBA00FC0307B812F8A9C76C02FCCB000703C0CC6C
EC8000786F070001F0C7FC6E6EA1EB3FE0781E7F6E796371A113FF78816E6FA15BA16079
806E6FA190C8FC79646E796272230779806E6FA15AA1180F79816E6FA15A791C1F6F7961
72233F79816F6E4E65A1187F8F6F6E4E65A118FF6F516F6173698F6F6F4D9AC9FCA15F8F
6F6F4D640EDF1A076F09FF6F6073210F0E8F816F6F4C65A1171F0E0781706E4C65556C1A
3F700707715F73217F556C81706E040F65A117FF556C81706F031F65556D6070073F7194
CAFC7467556D80706F037F64A11607556D80706F03FF64556D180F704E735D741F1F9CC7
6C81716E4A65A1163F546E81716E020765546E187F71050F735D741FFF546E81716F011F
65A15D546F80716F013F9ACBFC546F5E71057F735C751D07546F80716F01FF64A1150F54
6F1580716F48659BC96C161F724B09C05B09FC1D3F537015E072DAFE0765A1157F537015
F072DAFF0F65537016FF72031F755B0A9F1BF9537114FD7203FF9ACCFCA191B5FC538372
6853837268A253837268A29ACB7E736752847367A252847367A2528473675285739CCDFC
A252857366A25285736652857366A299CD7E7465A25186083F655186081F655186E007F0
75CEFC>229 144 123 269 240 87 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fc cmbx12 12 14
/Fc 14 85 df<EC03C01407141F147FEB03FF133FB6FCA413C3EA0003B3B3ADB712FCA5
264177C038>49 D<ECFFE0010F13FE013F6D7E90B612E0000315F82607FC0313FE3A0FE0
007FFFD81F806D138048C7000F13C0488001C015E001F07F00FF6E13F07F17F881A46C5A
6C5A6C5AC9FC17F05DA217E05D17C04B13804B1300A2ED1FFC4B5A5E4B5A4B5A4A90C7FC
4A5A4A5AEC0FF04A5AEC3F804AC7127814FE495A494814F8D907E014F0495A495A49C8FC
017C140149140348B7FC4816E05A5A5A5A5AB8FC17C0A42D417BC038>I<EE1F80A24C7E
A24C7EA34C7EA24B7FA34B7FA24B7FA34B7F169F031F80161F82033F80ED3E07037E8015
7C8203FC804B7E02018115F0820203814B137F0207815D173F020F814B7F021F8292C77E
A24A82023E80027E82027FB7FCA291B87EA2498302F0C8FCA20103834A157F0107834A15
3FA249488284011F8491C97E4984133E017E82B6020FB612F0A54C457CC455>65
D<DCFFF01470031F01FF14F04AB6EAE0010207EDF803023FEDFE0791B539E001FF0F4949
C7EA3F9F010701F0EC0FFF4901C0804990C87E4948814948814948167F4849163F484916
1F5A4A160F485B19074890CAFC19035A5BA2007F1801A34994C7FC12FFAE127F7F1AF0A2
123FA27F6C18011AE06C7F19036C6D17C06E16077E6C6DEE0F806C6DEE1F006D6C5E6D6C
167E6D6C6C5D6D6D4A5A6D01F0EC07F0010101FEEC1FE06D903AFFF001FF80023F90B6C7
FC020715FC020115F0DA001F1480030001F8C8FC44467AC451>67
D<B9FC18F018FE727E19E026003FFEC7001F13F805017F9438003FFF060F7F727F727F72
7F84737E737EA2737EA2737EA21B80A2851BC0A51BE0AD1BC0A51B8061A21B006162193F
624F5A19FF624E5B06075B4E5B063F90C7FC4DB45A050F13F8BA5A19C04EC8FC18F095C9
FC4B447CC356>I<BA12F8A485D8001F90C71201EF003F180F180318011800A2197E193E
A3191EA21778A285A405F890C7FCA316011603161F92B5FCA5ED001F160316011600A2F1
01E01778A2F103C0A494C7FC1907A21A80A2190FA2191FA2193FF17F0061601807181F4D
B5FCBBFC61A443447DC34A>I<B712E0A5D8001F90C7FCB3B3B3A4B712E0A523447DC32A>
73 D<B712F0A526003FFECAFCB3B1F00780A4180F1900A460A360A2187EA218FE170117
031707171F177FEE03FFB95AA539447CC343>76 D<B500FE067FB512806E95B6FCA26F5E
A2D8003F50C7FC013D6DEE03DFA2013C6DEE079FA26E6CEE0F1FA26E6C161EA26E6C163C
A36E6C1678A26E6C16F0A26E6DEC01E0A26E6DEC03C0A36E6DEC0780A26F6CEC0F00A26F
6C141EA26F6C5CA36F6C5CA26F6C5CA26F6D485AA26F6D485AA26F6D485AA3706C48C7FC
A293383FF81EA2706C5AA2706C5AA3706C5AA2705BA2705BA2705BA2B6057FB6128071C7
FCA2173E171C61447CC36A>I<B64BB512FE8181A281D8003F6D91C7EA780081013D7F81
133C6E7E6E7F6E7F6E7F6E7F82806E7F6E7F6F7E6F7F83816F7F6F7F6F7F6F7F6F7F8382
707F707F707F707F8482707F707F717E7113807113C019E0837113F07113F87113FC7113
FE19FF847213F884848484A28484197F193F191FA2190F1907B61603190119001A78A24F
447CC358>I<923807FFC092B512FE0207ECFFC0021F15F091267FFE0013FC902601FFF0
EB1FFF01070180010313C04990C76C7FD91FFC6E6C7E49486F7E49486F7E01FF8348496F
7E48496F1380A248496F13C0A24890C96C13E0A24819F04982003F19F8A3007F19FC4917
7FA400FF19FEAD007F19FC6D17FFA3003F19F8A26D5E6C19F0A26E5D6C19E0A26C6D4B13
C06C19806E5D6C6D4B13006C6D4B5A6D6C4B5A6D6C4B5A6D6C4A5B6D01C001075B6D01F0
011F5B010101FE90B5C7FC6D90B65A023F15F8020715C002004AC8FC030713C047467AC4
54>I<B812F8EFFFC018F818FE727ED8001F90C7003F13E005037F05007F727E727E727E
A28684A286A762A24E90C7FCA24E5A61187F943801FFF005075B053F138092B7C8FC18F8
18E018F892C77FEF3FFF050F7F717F717FA2717FA2717FA785A61B0F85A2187F73131F72
141EB700E06DEB803E72EBE0FC72EBFFF8060114F0726C13E0CC0007138050457DC354>
82 D<DAFFE0131C010701FE133C013F9038FF807C90B6EAE0FC4815F9489038801FFF39
07FC00014848EB007F4848143F4848140F491407007F15035B1601160012FF177CA27FA2
6D153C7F7F6D92C7FC6C7EEBFFE014FE6CEBFFF015FF6C15E016FC6C816C6F7E6C826C82
6C6C81011F810107811300020F80140003077FED007F82040F1380828212F082A282A27E
A218007EA26C5D6C5E6D14036D5D6D140701F84A5A01FFEC3FF002F8EBFFE0486CB65AD8
FC1F92C7FCD8F80714FC48C614F0480107138031467AC43E>I<003FBA12E0A59026FE00
0FEB8003D87FE09338003FF049171F90C71607A2007E1803007C1801A300781800A400F8
19F8481978A5C81700B3B3A20107B8FCA545437CC24E>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fd cmr12 12 64
/Fd 64 123 df<9239FFC001FC020F9038F80FFF913B3F803E3F03C0913BFC00077E07E0
D903F890390FFC0FF0494890383FF81F4948EB7FF0495A494814E049C7FCF00FE0499139
3FC0038049021F90C7FCAFB912F0A3C648C7D81FC0C7FCB3B2486CEC3FF0007FD9FC0FB5
12E0A33C467EC539>11 D<4AB4FC020F13E091387F80F8903901FC001C49487FD907E013
0F4948137F011FECFF80495A49C7FCA25B49EC7F00163E93C7FCACEE3F80B8FCA3C648C7
FC167F163FB3B0486CEC7FC0007FD9FC1FB5FCA330467EC536>I<913801FFC0020FEBFB
8091387F803F903801FC00494813FFEB07E0EB1FC0A2495A49C7FC167F49143F5BAFB8FC
A3C648C7123FB3B2486CEC7FC0007FD9FC1FB5FCA330467EC536>I<121EEA7F80EAFFC0
A9EA7F80ACEA3F00AB121EAC120CA5C7FCAA121EEA7F80A2EAFFC0A4EA7F80A2EA1E000A
4778C61B>33 D<140C141C1438147014E0EB01C01303EB0780EB0F00A2131E5BA25B13F8
5B12015B1203A2485AA3485AA348C7FCA35AA2123EA2127EA4127CA312FCB3A2127CA312
7EA4123EA2123FA27EA36C7EA36C7EA36C7EA212017F12007F13787FA27F7FA2EB0780EB
03C01301EB00E014701438141C140C166476CA26>40 D<12C07E12707E7E7E120F6C7E6C
7EA26C7E6C7EA21378137C133C133E131E131FA2EB0F80A3EB07C0A3EB03E0A314F0A213
01A214F8A41300A314FCB3A214F8A31301A414F0A21303A214E0A3EB07C0A3EB0F80A3EB
1F00A2131E133E133C137C13785BA2485A485AA2485A48C7FC120E5A5A5A5A5A16647BCA
26>I<121EEA7F8012FF13C0A213E0A3127FEA1E601200A413E013C0A312011380120313
005A1206120E5A5A5A12600B1D78891B>44 D<B612C0A61A067F9721>I<121EEA7F80A2
EAFFC0A4EA7F80A2EA1E000A0A78891B>I<1618163C167CA2167816F8A216F01501A216
E01503A216C01507A21680150FA2ED1F00A2151E153EA2153C157CA2157815F8A25D1401
A24A5AA25D1407A25D140FA292C7FC5CA2141E143EA2143C147CA25CA25C1301A25C1303
A25C1307A25C130FA291C8FC5BA2133EA2133C137CA2137813F8A25B1201A25B1203A248
5AA25B120FA290C9FC5AA2121E123EA2123C127CA2127812F8A25A126026647BCA31>I<
14FF010713E090381F81F890383E007C01FC133F4848EB1F8049130F4848EB07C04848EB
03E0A2000F15F0491301001F15F8A2003F15FCA390C8FC4815FEA54815FFB3A46C15FEA5
6D1301003F15FCA3001F15F8A26C6CEB03F0A36C6CEB07E0000315C06D130F6C6CEB1F80
6C6CEB3F00013E137C90381F81F8903807FFE0010090C7FC28447CC131>I<143014F013
011303131F13FFB5FC13E713071200B3B3B0497E497E007FB6FCA3204278C131>I<EB03
FE90381FFFC0017F13F03901F80FFC3903C001FE48486C7E000EC7EA7F8048EC3FC0ED1F
E04815F00030140F007015F800601407126CB415FC7F7F1503A46C4813076CC7FCC8FC16
F8A2150F16F0151F16E0A2ED3FC0ED7F8016005D5D4A5A4A5A4A5A5D4A5A4A5A4AC7FC14
7C5C5C495A495A495A49C7120C131E5B013814185B5B485A4848143848C81230000E1570
001FB612F0A25A5AB712E0A326427BC131>I<49B4FC010F13E0013F13FC9038FE01FE3A
01F0007F80D803C0EB3FC048C7EA1FE0120EED0FF0EA0FE0486C14F8A215077F5BA26C48
130FEA03C0C813F0A3ED1FE0A2ED3FC01680ED7F0015FE4A5AEC03F0EC1FC0D90FFFC7FC
15F090380001FCEC007FED3F80ED1FC0ED0FE016F0ED07F816FC150316FEA2150116FFA3
121EEA7F80487EA416FE491303A2007EC713FC00701407003015F80038140F6C15F06CEC
1FE06C6CEB3FC0D803E0EB7F803A01FE01FE0039007FFFF8010F13E0010190C7FC28447C
C131>I<ED0380A21507150FA2151F153FA2157F15FFA25CEC03BF153F14071406140C14
1C141814301470146014C013011480EB03005B13065B131C13185B1370136013E0485A5B
120390C7FC1206120E120C5A123812305A12E0B812C0A3C8383F8000ADEDFFE0027FEBFF
C0A32A437DC231>I<121CA2EA1F8090B712C0A3481680A217005E0038C8120C0030151C
00705D0060153016705E5E4814014B5A4BC7FCC81206150E5D151815385D156015E04A5A
A24A5A140792C8FC5CA25C141E143EA2147E147CA214FCA21301A3495AA41307A6130FAA
6D5AEB01C02A457BC231>55 D<14FF010713E0011F13F890387F80FC9038FC007E48487F
4848EB1F804848EB0FC0000FEC07E0485AED03F0485A16F8007F140190C713FCA25AA216
FE1500A516FFA46C5CA36C7E5D121F7F000F5C6C6C130E150C6C6C131C6C6C5BD8007C5B
90383F01E090390FFF80FE903801FE0090C8FC150116FCA4ED03F8A216F0D80F80130748
6C14E0486C130F16C0ED1F80A249EB3F0049137E001EC75A001C495A000F495A3907E01F
E06CB51280C649C7FCEB1FF028447CC131>57 D<121EEA7F80A2EAFFC0A4EA7F80A2EA1E
00C7FCB3A5121EEA7F80A2EAFFC0A4EA7F80A2EA1E000A2B78AA1B>I<16C04B7EA34B7E
A34B7EA34B7EA3ED19FEA3ED30FFA203707FED607FA203E07FEDC03FA2020180ED801FA2
DA03007F160FA20206801607A24A6D7EA34A6D7EA34A6D7EA20270810260147FA202E081
91B7FCA249820280C7121FA249C87F170FA20106821707A2496F7EA3496F7EA3496F7EA2
01788313F8486C83D80FFF03037FB500E0027FEBFFC0A342477DC649>65
D<B8FC17E017FC00019039C00003FF6C6C4801007FEF3FC0717E717E717E841703841701
84A760A21703601707604D5A4D5AEF7FC04DC7FCEE03FEEE3FF091B65A17FC0280C7B47E
EF1FC0EF0FF0717E717E717E717E1980187F19C0A2183F19E0A8F07FC0A2198018FF4D13
00A24D5AEF0FFC4D5AEF7FE048486C903803FFC0B9C7FC17FC17C03B447CC345>I<DB0F
FE146092B500C013E0020314F0913A0FFC01FC0191393FC0003E02FFC7EA0F83D903FCEC
03C74948EC01E74948EC00FF4948157F4948153F4948151F49C9120F485A491607120348
481603A248481601A248481600A2123FA2491760127FA31900485AAE6C7EA21960A2123F
7FA2001F18E07F000F18C0A26C6C160119806C6C160312016DEE07006C6C16066D6C150E
6D6C5D6D6C5D6D6C15786D6C5D6D6C4A5AD900FFEC0780DA3FC0011FC7FCDA0FFC13FC02
03B512F0020014C0DB0FFEC8FC3B487BC546>I<B8FC17F017FC00019039C00007FF6C49
9038007FC0017FED1FE0EF07F0EF03FC717E717E84727E727E727EA2727E85180385A218
0185A38584A31A80AD1A00A36061A361180361180761180F614E5A183F614EC7FC18FEEF
03FC4D5AEF1FE001FFED7FC0486DD907FFC8FCB812FC17F094C9FC41447CC34B>I<B912
F8A3000101C0C7127F6C6C48EC07FC17011700187C183C181CA284A31806A4180704067F
A395C7FCA4160EA2161E163E16FE91B5FCA3EC8000163E161E160EA21606A319C0A3F001
8093C7FCA41803A21900A260A260A2181EA2183E187EEF01FE170748486C147FB95AA33A
447CC342>I<B912F0A3000101C0C7127F6C6C48EC0FF817031701170018781838A2181C
A3180CA4180E1806160CA21800A5161CA2163C167CED01FC91B5FCA3EC8001ED007C163C
161CA2160CA793C8FCB08048487EB612F8A337447CC340>I<DB0FFE146092B500C013E0
020314F0913A0FFC01FC0191393FC0003E02FFC7EA0F83D903FCEC03C74948EC01E74948
EC00FF4948157F4948153F4948151F49C9120F485A491607120348481603A248481601A2
48481600A2123FA2491760127FA396C7FC485AAD4CB612C06C7EA293C7387FF000725A00
3F171F7FA2121F7F120FA26C7EA26C7E6C7EA26C7E6D7E6D6C153F6D7E6D6C157F6D6C15
E7D903FEEC01C7D900FFEC0383DA3FE0EB0F01DA0FFCEBFE000203B500F81360020002E0
90C7FCDB0FFEC9FC42487BC54D>I<B6D8C003B6FCA3000101E0C70007138026007F8091
3801FE00B3A991B7FCA30280C71201B3AC2601FFE0913807FF80B6D8C003B6FCA340447C
C349>I<B612F0A3C6EBF0006D5A6D5AB3B3B3A4497E497EB612F0A31C447DC323>I<010F
B512FEA3D9000313806E130080B3B3AB123F487E487EA44A5A13801300006C495A00705C
6C13076C5C6C495A6CEB1F802603E07FC7FC3800FFFCEB1FE027467BC332>I<B612F8A3
000101E0C9FC6C6C5A5CB3B31830A418701860A518E0A3EF01C0A217031707A2170F173F
177FEE01FF48486C011F1380B9FCA334447CC33D>76 D<B56C933807FFFC6E5EA20001F1
FE0026006FE0EE1BF8A3D967F01633A2D963F81663A3D961FC16C3A3D960FEED0183A202
7FED0303A36E6C1406A36E6C140CA26E6C1418A36E6C1430A36E6C1460A26E6C14C0A36E
6CEB0180A3037FEB0300A292383F8006A36F6C5AA36F6C5AA26F6C5AA36F6C5AA36F6C5A
A26FB45AA370C7FC13F0A2486C143ED80FFFEF0FFEB500F0011C0107B512FCA34E447BC3
59>I<B56C020FB5FC8080C6040013F06D6CED1F80D96FF8ED0F00A2D967FC1506EB63FE
A2EB61FF01607FA26E7E6E7EA26E7E6E7EA26E7E6E7EA26E7E6E7FA26F7E6F7EA26F7E6F
7EA26F7E6F7EA26F7E6F1380A2EE7FC0EE3FE0A2EE1FF0EE0FF8A2EE07FCEE03FEA2EE01
FF701386A2EF7FC6EF3FE6A2EF1FF6EF0FFEA217071703A217011700A201F0167E183E48
7ED80FFF161EB500F0150EA2180640447CC349>I<ED1FFC4AB512C0913907F007F09139
1F8000FC027EC7123FD901F8EC0FC049486E7E49486E7E49486E7E49486E7E49C9127E01
7E8201FE834848707E4848707EA24848707EA2000F84491603001F84A24848707EA3007F
84A24982A300FF1980AD6C6C4C1300A4003F606D1603A2001F60A26C6C4C5AA26C6C4C5A
A20003606D161F6C6C4C5A000060017F4CC7FC6E5D013F5E6D6C4A5AD907E0EC03F06D6C
4A5AD901FCEC1FC0D9007E4AC8FCDA1F8013FC913907F007F00201B512C09126001FFCC9
FC41487BC54C>I<B712FCEEFFC017F800019039C0000FFC6C6C48EB01FF9338007F80EF
1FE0170FEF07F018F8EF03FCA218FE1701A218FFA718FEA2170318FCA2EF07F818F0EF0F
E0EF1FC0EF7F80933801FE00EE0FFC91B612F017800280C9FCB3AA3801FFE0B612C0A338
447CC342>I<B712E016FF17C000019039C0003FF86C6C48EB03FCEE00FF717E717E717E
717E717EA284170384A760A21707604D5AA24D5A4D5A4DC8FCEE01FEEE07F8EE3FE091B6
C9FC16FC913980007F80EE0FE0707EEE03FC707E160083717EA2717EA784A71A6084171F
A21AE0716C13C02601FFE002071301B600C01680943801FC03943900FE0700CBEA3FFEF0
07F843467CC348>82 D<49B41303010FEBE007013F13F89039FE00FE0FD801F8131FD807
E0EB079F49EB03DF48486DB4FC48C8FC4881003E81127E82127C00FC81A282A37E82A27E
A26C6C91C7FC7F7FEA3FF813FE381FFFE06C13FE6CEBFFE06C14FC6C14FF6C15C0013F14
F0010F80010180D9001F7F14019138001FFF03031380816F13C0167F163F161F17E000C0
150FA31607A37EA36C16C0160F7E17806C151F6C16006C5D6D147ED8FBC05CD8F9F0495A
D8F07C495A90393FC00FE0D8E00FB51280010149C7FC39C0003FF02B487BC536>I<003F
B912F8A3903BF0001FF8001F01806D481303003EC7150048187C0078183CA20070181CA3
0060180CA5481806A5C81600B3B3A54B7EED7FFE49B77EA33F447DC346>I<B600C0010F
B5FCA3000101E0C813F026007F80ED1F80F00F00A21806B3B3A7180E6D6C150CA2181C13
1F6E1518010F163818306D6C1570606D6C14016D6C5D6D6CEC0780027F4AC7FC6E6C131E
DA1FE0137C913907FC03F00201B55A6E6C1380DB07FCC8FC40467CC349>I<B60107B500
F890380FFFFEA3000301E0D9001F90C813F06C0180DA0FFCED3FC091C86C48ED1F006C87
1C0E6D6C6E7E1C0CA26D6C6F5DA36EDA06FF1538011F1A30A26E020E6D1470010FDB0C7F
1560A26E021C7F0107DB183F5DA2856D6CDA301F4A5AA36D6C4A6C6C49C7FCA36D6C4A6C
6C1306A3DB80016E130E027FDA8003140CA2DBC00380023FDA00015CA203E081021F0106
6D5CA36E6C486E6C5AA36E6C486E6C5AA36F48EC1FE1020360A2DBFE7015F30201016002
0F90C8FCA2DBFFE015FB6E49EC07FEA36F486E5AA36FC86C5AA3031E6F5AA4030C16605F
467EC364>87 D<003FB500E0011FB5FCA3C691C7000713E0D93FFC020190C7FC6D4815FC
010F6F5A6D6C15E0A26D6C4A5A6D6C5D4DC8FC6D6D5B6E6C13065F6E6C131C6E6C13185F
6E6C13706E6C13605F913803FE01DA01FF5B4CC9FC6E1387ED7FC616CCED3FFC6F5A5E6F
7E6F7EA26F7E82A203067F150E92380C7FC04B6C7E15389238301FF04B6C7E15E04B6C7E
4A486C7E14034B6C7E02066D7F140E020C6E7E4A6E7E143802306E7E4A6E7E14E04A6E7E
49486E7E130349C86C7E496F7F5B496C8201FF83000701E0020313F8B500F8021FEBFFF0
A344447EC349>I<001FB81280A39126800001130001FCC7FC01F04A5A01C04A5A5B90C8
485A121E4C5A484B5AA200384B5A4C5AA24B90C7FC00304A5AA24B5AA24B5AC8485AA24B
5A4B5AA24B5A5C93C8FC4A5AA24A5A4A5AA24A5A4A5AA24A5A14FF5D4990C9FCEF018049
5A495AA2495A494814031800495AA2495A495A5F4890C8FC485A5F485A48485D5F48485D
17FE484814034848140F16FFB8FCA331447BC33C>90 D<EB07FC90383FFF809038F80FE0
3903C003F048C66C7E000E6D7ED80FC0137E486C137F6D6D7EA36F7EA26C5AEA0380C8FC
A4EC0FFF49B5FC90380FFE1FEB3FC0EBFF00EA03FC485A485A485A485A127F5B176048C7
FCA3153FA36D137F007F14EF6D9038C7E0C0003F13013A1FE00783F13B07F81E03FF8027
01FFFC0113003A001FE0007C2B2E7CAC31>97 D<EA01FC12FFA3120712031201B3EC03FC
91380FFF8091383C07E091387001F89039FDE0007E02807F01FFEC1F8091C713C049EC0F
E049140717F0A2EE03F8A217FCA2160117FEAB17FC1603A217F8A2EE07F0A26DEC0FE017
C06D141F01FBEC3F80D9F380EB7E00D9E1C05B9039E0F001F89039C03C07E09039801FFF
80C7D803FCC7FC2F467DC436>I<EC7F80903803FFF090380FC07C90383F000F01FCEB03
804848EB01C00003140F4848EB1FE049133F120F485AA2485AED1FC0007FEC070092C7FC
A290C9FC5AAB7E7FA2123F16307F001F15706C6C146016E06C6C14C06C6C13010001EC03
806C6CEB0700013F131E90381FC078903807FFF001001380242E7DAC2B>I<167FED3FFF
A315018182B3EC7F80903803FFF090380FC07C90383F000E017E1307496D5AD803F87F48
487F5B000F81485AA2485AA2127FA290C8FC5AAB7E7FA2123FA26C7EA2000F5D7F6C6C5B
00035C6C6C9038077F806C6C010E13C0013F011C13FE90380FC0F8903803FFE09026007F
0013002F467DC436>I<EB01FE903807FFC090381F03F090387E00FC49137E48487F485A
4848EB1F80000F15C049130F121F484814E01507A2007F15F090C7FCA25AA390B6FCA290
C9FCA67EA27FA2123F16306C7E1670000F15606D14E06C6C14C0000314016C6CEB03806C
6CEB0700013E131E90381F80F8903803FFE0010090C7FC242E7DAC2B>I<EC0FE0EC7FF8
903801F81E903803F03F90390FE07F8090381FC0FF5C133F495AA2ED7F0001FE131C92C7
FCAFB67EA3C648C8FCB3B2486C7E007F13FFA321467EC51E>I<EE0F80D901FCEB7FE090
3A0FFF81F0F090393F07E3819039FC01FF033A01F800FE014848017E13E00007027FC7FC
497F000F8149131F001F81A9000F5D6D133F000792C7FC6D5B0003147E6C6C5B6D485A39
03BF07E090380FFF80260701FCC8FC90CAFCA25AA37F6C7E7F90B512F86C14FF16E06C15
F86C6C8048B67E3A07C0000FFF48481300003FC8EA3F80003E151F48ED0FC0A2481507A5
6C150F007C1680007E151F003E16006C153E6C6C5CD807E0495AD801F8EB07E0D8007FEB
3F8090261FFFFEC7FC010113E02C427DAC31>I<EA01FC12FFA3120712031201B3EC01FE
913807FFC091381E07F091383801F802707FECE000D9FDC07F5C01FF147F91C7FCA25BA3
5BB3A8486CECFF80B5D8F83F13FEA32F457DC436>I<EA01E0EA07F8A2487EA46C5AA2EA
01E0C8FCADEA01FC12FFA3120712031201B3B0487EB512F8A315437DC21C>I<EA01FC12
FFA3120712031201B3A292381FFFE0A36F1300ED07F816E05E5E030EC7FC5D5D5D5D4A5A
4A5A4AC8FC5CEC3F804A7E14FF9038FDCFE09038FF8FF01407496C7E01FC7F14016E7E81
816F7E82151F6F7E821507826F7E8282486C491380B5D8F81F13F8A32D457DC433>107
D<EA01FC12FFA3120712031201B3B3B3A5487EB512F8A315457DC41C>I<D801FC01FFEC
1FE000FF010701E0EBFFFC913B0F03F801E07F913C3C01FC07803F800007903C7000FE0E
001FC0000349D97E1C130F2601FDC0D97F38804A143001FFDA3FF06D7E91C75BA2495DA3
495DB3A8486C4A6C497EB5D8F81FB50003B512E0A34B2C7DAB52>I<3901FC01FE00FF90
3807FFC091381E07F091383801F8000701707F0003EBE0002601FDC07F5C01FF147F91C7
FCA25BA35BB3A8486CECFF80B5D8F83F13FEA32F2C7DAB36>I<EC7F80903803FFF09038
0FC0FC90383E001F496D7E496D7E48486D7E48486D7E48486D7E000F81A24848147E003F
157FA290C87E481680A44816C0AA6C1680A26D147F003F1600A2001F157E6D14FE000F5D
6D130100075D6C6C495A6C6C495A6C6C495A013E49C7FC90381FC0FE903807FFF8903800
7F802A2E7DAC31>I<3901FC03FC00FF90380FFF8091383C07E091387001F83A07FDE000
FE00030180137FD801FFEC3F8091C7EA1FC04915E049140F17F0160717F8160317FCA3EE
01FEABEE03FCA3EE07F8A217F0160F6D15E0EE1FC06D143F17806EEB7E00D9FDC05B9039
FCF003F891383C0FE091381FFF80DA03FCC7FC91C9FCAE487EB512F8A32F3F7DAB36>I<
3903F803F000FFEB1FFCEC3C3EEC707F0007EBE0FF3803F9C000015B13FBEC007E153C01
FF13005BA45BB3A748B4FCB512FEA3202C7DAB26>114 D<90383FE0183901FFFC383907
E01F78390F0003F8001E1301481300007C1478127800F81438A21518A27EA27E6C6C1300
6C7E13FC383FFFE06C13FC6C13FF6C14C06C14E0C614F0011F13F81300EC0FFC140300C0
EB01FE1400157E7E153EA27EA36C143C6C147C15786C14F86CEB01F039F38003E039F1F0
0F8039E07FFE0038C00FF01F2E7DAC26>I<1306A5130EA4131EA3133E137EA213FE1201
1207001FB512F0B6FCA2C648C7FCB3A4150CAA017E131C017F1318A26D133890381F8030
ECC070903807E0E0903801FFC09038007F001E3E7EBC26>I<D801FC147F00FFEC3FFFA3
00071401000380000181B3A85EA35DA212006D5B017E9038077F80017F010E13C06D011C
13FE90380FC078903803FFF09026007F8013002F2D7DAB36>I<B539F001FFFCA3000790
C7EA7FE06C48EC1F8000011600160E1200160C017F5CA280013F5CA26E1370011F146080
010F5CA2ECF00101075CA26D6C48C7FCA26E5A01011306A26D6C5AA214FF6E5AA215B8EC
3FB015F06E5AA36E5AA26E5AA36EC8FC2E2C7EAA33>I<B500E0B539E03FFF80A3000790
3C000FFE000FFC00D803FCD903F8EB03F8F001E0120103015D6D80000060A26D6E13036D
D9037E91C7FCA20280017F5B013FD9063F1306A2D91FC06E5AED0C1FA2D90FE06E5AED18
0FA2D907F06E5AED3007A2D903F86E5AED6003A2902601FCE06D5AEDC00117FCD900FFEC
FD80ED800017FF027F92C8FC92C77EA26E147E023E143EA2021E143C021C141CA2412C7E
AA46>I<B539F007FFFCA30003D9C00113C0C6496C1300017F14FC013F5C6E13E06D7E01
0F495A6D6C485A02F890C7FC903803FC060101130E6E5A903800FF186E5AEC3FF05D141F
140F6E7E81140FEC0DFCEC19FEEC38FF4A7E9138603F8002C07F0101131F49486C7E0200
7F01066D7E010E1303496D7E013C80017C80D801FC1580D80FFE4913C0B5D8800F13FFA3
302B7FAA33>I<B539F001FFFCA3000790C7EA7FE06C48EC1F8000011600160E0000150C
6D141C6D1418A26E1338013F1430A26D6C5BA26E13E0010F5CA26D6C485AA2ECF8030103
91C7FCA2903801FC06A2ECFE0E0100130CA2EC7F18A215B8EC3FB0A2EC1FE0A36E5AA26E
5AA36EC8FCA21406A35CA25CA2123C007E5BB4FC5CA25CEAFE01387C0380D87007C9FCEA
3C1EEA0FFCEA03F02E3F7EAA33>I<003FB612E0A29038C0003F90C713C0003CEC7F8000
38ECFF00A20030495A0070495AA24A5A0060495AA24A5A4A5AA2C7485A4AC7FC5B5C495A
13075C495A131F4A1360495A495AA249C712C0485AA2485A485A1501485A48481303A248
48EB07804848131F00FF14FF90B6FCA2232B7DAA2B>I E
%EndDVIPSBitmapFont
end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: a4
a4
%%EndPaperSize

%%EndSetup
%%Page: 2 1
2 1 bop Black Black 106 563 a
 gsave currentpoint translate 0 6160320 15800 div 1769472 15800 div
1513875 -15800 div box 0 0 0 setrgbcolor fill grestore
 106 563 a 230 563 a
 1. setgray
 230
563 a 230 563 a
 0 setgray
 230 563 a 425 647 3128 4 v 591 838 a
Fb(ABSTRA)-6 b(CT)-47 1625 y Fd(T)e(orres,)31 b(Ricardo.)41
b(Ph.D.,)31 b(Sc)m(ho)s(ol)e(of)g(Ocean)h(Sciences,)i(Univ)m(ersit)m(y)
e(of)f(W)-8 b(ales,)30 b(Bangor,)g(Ma)m(y)-8 b(,)-47
1745 y(2003.)52 b(The)37 b(Coastal)e(T)-8 b(ransition)35
b(Zone)71 b(of)35 b(the)i(Galician)32 b(Region:)49 b(Upp)s(er)37
b(La)m(y)m(er)f(Resp)s(onse)-47 1865 y(to)c(Wind)g(F)-8
b(orcing)31 b(and)i(Circulation.)99 2173 y(Through)62
b(a)g(set)g(of)g(observ)-5 b(ations)61 b(including)f(satellite,)68
b(cruise)62 b(and)g(mo)s(oring)d(data)-47 2354 y(encompassing)24
b(the)g(p)s(erio)s(d)f(1997-2001)e(the)k(Galician)c(shelf)i(resp)s
(onse)j(to)d(the)i(v)-5 b(arying)23 b(seasonal)-47 2534
y(forcing)52 b(has)i(b)s(een)h(c)m(haracterised.)107
b(The)55 b(t)m(ypical)e(spatial)f(v)-5 b(ariabilit)m(y)50
b(of)j(the)h(wind)g(and)-47 2715 y(its)d(e\013ect)i(on)f(the)g(shelf)g
(circulation)e(has)i(b)s(een)h(in)m(v)m(estigated.)102
b(The)53 b(seasonalit)m(y)f(of)f(the)-47 2896 y(large)33
b(scale)h(wind)h(during)f(July)g(1999-)f(Ma)m(y)i(2001)e(w)m(as)j(mask)
m(ed)f(b)m(y)g(up)m(w)m(elling/do)m(wn)m(w)m(elling)-47
3076 y(patterns)48 b(throughout)f(the)h(y)m(ear.)88 b(Ho)m(w)m(ev)m
(er,)54 b(up)m(w)m(elling)46 b(winds)i(w)m(ere)g(found)g(to)f(b)s(e)g
(more)-47 3257 y(consisten)m(t)59 b(during)f(the)h(summer)f(and)g(the)h
(system)h(sho)m(w)m(ed)g(a)e(clear)g(seasonalit)m(y)g(with)-47
3437 y(up)m(w)m(elling)21 b(during)g(the)h(summer)f(and)h(do)m(wn)m(w)m
(elling)g(during)f(win)m(ter)h(mediated)f(b)m(y)h(a)g(meridional)-47
3618 y(densit)m(y)38 b(gradien)m(t.)57 b(Despite)37 b(its)f(spatial)g
(complexit)m(y)-8 b(,)37 b(the)h(mesoscale)f(wind)g(v)-5
b(ariabilit)m(y)34 b(w)m(as)-47 3798 y(reduced)41 b(to)e(a)h(\014nite)f
(n)m(um)m(b)s(er)h(of)g(spatial)e(patterns.)65 b(These)42
b(fa)m(v)m(oured)f(up)m(w)m(elling)d(North)i(or)-47 3979
y(South)49 b(of)g(Cap)s(e)g(Finisterre)f(or)h(do)m(wn)m(w)m(elling)f
(along)g(the)i(w)m(est)g(coast)f(of)g(Galicia.)90 b(Their)-47
4160 y(relativ)m(e)29 b(abundance)j(determined)e(the)h(in)m(terann)m
(ual)e(v)-5 b(ariabilit)m(y)28 b(during)h(b)s(oth)h(up)m(w)m(elling)g
(and)-47 4340 y(do)m(wn)m(w)m(elling)i(regimes.)99 4528
y(Slop)s(e)44 b(p)s(olew)m(ard)h(\015o)m(w)h(c)m(haracteristic)f(of)f
(the)i(do)m(wn)m(w)m(elling)e(regime)g(w)m(as)i(measured)f(in)-47
4708 y(all)40 b(regimes,)k(suggesting)e(it)f(is)h(a)g(p)s(ermanen)m(t)g
(feature)g(in)g(the)g(Galician)d(CTZ)k(system.)73 b(Its)-47
4889 y(win)m(ter)30 b(v)-5 b(ariabilit)m(y)27 b(w)m(as)k(related)f(to)f
(un)m(usual)i(p)s(erio)s(ds)e(of)h(up)m(w)m(elling)f(winds.)43
b(It)30 b(had)g(a)g(surface)-47 5069 y(signature)36 b(in)h(win)m(ter,)h
(autumn)f(and)g(during)f(the)i(spring.)56 b(In)38 b(the)f(summer)g(it)f
(forms)g(a)h(deep)-47 5250 y(p)s(olew)m(ard)e(\015o)m(w.)53
b(The)37 b(shelf)e(is)g(e\013ectiv)m(ely)i(isolated)d(from)g(the)i(o)s
(cean)g(due)g(to)g(the)g(shelf-edge)p Black 1661 5499
a(-)c(ii)e(-)p Black eop
%%Page: 3 2
3 2 bop Black Black 236 100 a Fd(fron)m(t)42 b(as)f(indicated)g(b)m(y)h
(the)g(lagrangian)d(horizon)m(tal)h(di\013usivit)m(y)h(although)f(some)
h(exc)m(hange)236 280 y(still)30 b(tak)m(es)k(place)f(in)e(the)i(form)f
(of)g(a)g(b)s(ottom)f(Ekman)i(la)m(y)m(er.)383 461 y(The)h(w)m(eak)m
(ening)g(of)f(the)g(meridional)d(densit)m(y)k(gradien)m(ts)f(sparks)i
(the)e(deca)m(y)i(phase)f(of)f(the)236 641 y(p)s(olew)m(ard)f(slop)s(e)
g(curren)m(t.)45 b(The)33 b(w)m(arm)g(tongue)f(broadens,)i(and)e(is)g
(distorted)g(b)m(y)i(in)m(teractions)236 822 y(with)45
b(the)h(mesoscale)f(eddy)i(\014eld)e(and)g(fresh)m(w)m(ater)i(inputs.)
82 b(Up)m(w)m(elling)45 b(fa)m(v)m(ourable)g(winds)236
1002 y(push)40 b(the)e(\015o)m(w)h(o\013shore)g(establishing)e(a)h
(second)i(north)m(w)m(ard)f(\015o)m(w,)i(and)d(short)h(liv)m(ed)f
(eddies)236 1183 y(and)33 b(up)m(w)m(elling)e(dynamics)i(break)g(the)g
(slop)s(e)f(\015o)m(w)h(structure.)383 1364 y(During)46
b(the)h(up)m(w)m(elling)g(regime,)j(the)e(upp)s(er)g(column)e
(structure)j(b)s(ecomes)e(dominated)236 1544 y(b)m(y)j(coastal)d(up)m
(w)m(elling)h(and)h(\014lamen)m(ts)f(and)g(the)h(p)s(olew)m(ard)g
(\015o)m(w)g(is)f(restricted)h(to)f(deep)s(er)236 1725
y(lev)m(els.)41 b(A)23 b(detailed)f(surv)m(ey)k(of)d(a)f(\014lamen)m(t)
h(sho)m(w)m(ed)i(limited)20 b(exp)s(ort)k(capabilities,)f(although)f
(the)236 1905 y(lagrangian)g(di\013usivit)m(y)h(w)m(as)i(enhanced)h
(during)d(the)i(summer)e(up)m(w)m(elling)g(regime.)40
b(In)m(terann)m(ual)236 2086 y(v)-5 b(ariabilit)m(y)27
b(during)h(the)i(up)m(w)m(elling)f(regime)f(is)h(c)m(haracterised)i(b)m
(y)f(either)f(presence/absence)34 b(of)236 2267 y(\014lamen)m(ts)e(or)h
(whether)h(the)f(main)d(\014lamen)m(t)i(is)g(at)g(Cap)s(e)h(Finisterre)
f(or)g(at)g(42)3182 2230 y Fa(\016)3221 2267 y Fd(latitude.)383
2447 y(T)-8 b(o)m(w)m(ards)62 b(the)g(end)h(of)e(the)g(up)m(w)m(elling)
g(regime,)67 b(when)c(the)f(up)m(w)m(elling)e(winds)i(start)236
2628 y(w)m(eak)m(ening,)40 b(the)e(p)s(olew)m(ard)g(\015o)m(w)g(clim)m
(bs)f(bac)m(k)h(on)m(to)g(the)g(upp)s(er)g(slop)s(e.)58
b(Ho)m(w)m(ev)m(er,)42 b(it)36 b(is)h(not)236 2808 y(un)m(til)42
b(the)h(meridional)c(densit)m(y)44 b(strengthens)g(that)f(the)g(p)s
(olew)m(ard)f(\015o)m(w)i(surfaces)g(again.)72 b(If)236
2989 y(\014lamen)m(ts)35 b(are)g(still)e(presen)m(t,)k(the)f(slop)s(e)e
(p)s(olew)m(ard)h(\015o)m(w)h(cuts)g(their)f(w)m(ater)g(supply)h(and)f
(they)236 3169 y(slo)m(wly)d(mix)g(a)m(w)m(a)m(y)-8 b(.)p
Black 1931 5499 a(-)32 b(iii)d(-)p Black eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
